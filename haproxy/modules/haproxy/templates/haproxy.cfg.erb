#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2 debug

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main *:5000
    acl url_static       path_beg       -i /static /images /javascript /stylesheets
    acl url_static       path_end       -i .jpg .gif .png .css .js

    use_backend static          if url_static
    default_backend             app

#frontend localhost80
#    bind *:80
#    mode http
#    redirect scheme https code 301 if !{ ssl_fc }

#frontend localhost443
#    bind *:443
#    #option tcplog
#   mode tcp
#    acl tls req.ssl_hello_type 1
#    tcp-request inspect-delay 5s
#    tcp-request content accept if tls
#    acl is_yandexweb req.ssl_sni -i epbyminw2976.minsk.epam.com
#    use_backend web_server if is_yandexweb

#frontend https-c-in
 #  bind 10.6.102.26:80
 #  mode http
 #  option httpclose
 #  default_backend web_server



frontend localhost
    bind *:80 #ssl crt /etc/ssl/minsk.epam.com/minsk.epam.com.pem
    mode http
    option http-server-close
    option forwardfor
    #reqadd X-Forwarded-Proto:\ https
    #reqadd X-Forwarded-Port:\ 443
    #rspadd  Strict-Transport-Security:\ max-age=15768000
    default_backend web_server

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend static

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------

backend app


backend web_server
 mode http
 server web <%= @proxy_site %> #:443 ssl verify none
